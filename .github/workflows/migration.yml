name: Migration

# For details on this workflow, refer to build/migration/README.md

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'demo/**'
      - '.github/workflows/site.yml'

jobs:
  migration:
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'ci-skipx')"
    strategy:
      matrix:
        datastore: [ 'db2', 'postgres' ]
        release: ['previous', 'last']
      fail-fast: false
    steps:
      - name: Checkout source code for main
        uses: actions/checkout@v2.3.4
        with:
          path: fhir/
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Fetch the right branch
        env:
          BASE: ${{ github['base_ref'] }}
        run: |
          cd fhir/
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${BASE}:refs/remotes/origin/${BASE}

      - name: Setup java
        uses: joschi/setup-jdk@v2.3.0
        with:
          java-version: 11

      - name: Gather the environment details
        if: always()
        run: |
          bash fhir/build/common/gather-environment-details.sh

      - name: Determine parameters for environment variables
        env:
          WORKSPACE: ${{ github.workspace }}
        run: bash fhir/build/migration/bin/0_determine.sh ${{matrix.release}}

      - name: Restore the cache for the previous version
        if: "!contains(env.migration_skip, 'true')"
        uses: actions/cache@v2
        env:
          cache-name: migration-db-${{ matrix.datastore }}-${{ env.migration_branch }}
        with:
            path: ~/fhir/build/migration/.cache
            key: ${{ env.cache-name }}-${{ hashFiles('db.tgz') }}
            restore-keys: |
              ${{ env.cache-name }}-${{ hashFiles('db.tgz') }}

      - name: Checks if the cache actually exists
        if: "contains(env.migration_skip, 'false')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          bash fhir/build/migration/bin/1_check-cache.sh ${{matrix.datastore}}

      - name: Checkout source code for previous
        if: "contains(env.migration_cache, 'false')"
        uses: actions/checkout@v2.3.4
        with:
          path: prev/
          ref: refs/heads/${{ env.migration_branch }}
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup previous release environment
        if: "contains(env.migration_cache, 'false')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          exit 1
          bash fhir/build/migration/bin/1_previous-setup.sh ${{matrix.datastore}}

      - name: Run previous release's Integration Tests
        if: "contains(env.migration_cache, 'false')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          bash fhir/build/migration/bin/2_previous-integration-test.sh ${{matrix.datastore}}
          bash fhir/build/migration/bin/3_previous-teardown.sh ${{matrix.datastore}}
      
      - name: Setup previous release's cached database
        if: "contains(env.migration_cache, 'true')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          bash fhir/build/migration/bin/3_previous-cache-startup.sh ${{matrix.datastore}}

      - name: Migrate to the current release 
        if: "!contains(env.migration_skip, 'true')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          bash fhir/build/migration/bin/4_current-migrate.sh ${{matrix.datastore}} ${{matrix.type}}

      - name: Integration Tests
        if: "!contains(env.migration_skip, 'true')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          bash fhir/build/migration/bin/5_current-pre-integration-test.sh ${{matrix.datastore}}
          bash fhir/build/migration/bin/6_current-reindex.sh ${{matrix.datastore}}
          bash fhir/build/migration/bin/7_current-integration-test.sh ${{matrix.datastore}}

      - name: Teardown and cleanup
        if: "!contains(env.migration_skip, 'true')"
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          bash fhir/build/migration/bin/8_teardown.sh ${{matrix.datastore}}


      - name: Cache the Database
        if: "contains(env.migration_cache, 'true')"
        uses: actions/cache@v2
        with:
          key: migration-db-${{ matrix.datastore }}-${{ env.previous_release }}
          path: | 
            ~/fhir/build/migration/.cache/db.tgz

      - name: Gather error logs
        if: failure()
        env:
          WORKSPACE: ${{ github.workspace }}
        run: bash fhir/build/common/gather-logs.sh migration ${{matrix.datastore}}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2.2.0
        with:
          name: integration-test-results-${{ matrix.datastore }}-${{ matrix.type }}-${{ matrix.target }}
          path: build/migration/integration-test-results